name: Enforce change window

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
    paths:
      - 'block-1/*'
      - 'block-2/*'

jobs:
  Audit-Pull-Request:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const requiredLabels = ['no release notes', 'public release notes'];
            let labels = [];

            if (context.payload.pull_request) {
              labels = context.payload.pull_request.labels;
            } else if (context.payload.issue) {
              labels = context.payload.issue.labels;
            }

            if (labels.filter(l => requiredLabels.includes(l.name)).length === 0) {
              throw new Error(`Required labels: ${requiredLabels.join(', ')}`);
            }

  pr-status:
    runs-on: ubuntu-latest

    steps:
      - uses: GrantBirki/pr-status@v1.2.2
        id: pr-status
        with:
          evaluations: approved # evaluate the given PR against the approved attribute
          pass_labels: ready-for-deployment # if the PR is approved (evaluation passes), apply the ready-for-deployment label
          fail_labels: pr-out-of-hours
      
      # view some extra outputs the action sets
      # your workflow can now run separate logic based on these outputs
      - name: outputs
        run: |
          echo "approved: ${{ steps.pr-status.outputs.approved }}"
          echo "total approvals ${{ steps.pr-status.outputs.total_approvals }}"
          echo "evaluation ${{ steps.pr-status.outputs.evaluation }}"
          echo "merge state status ${{ steps.pr-status.outputs.merge_state_status }}"
          echo "commit status ${{ steps.pr-status.outputs.commit_status }}"
          echo "review decision ${{ steps.pr-status.outputs.review_decision }}"
